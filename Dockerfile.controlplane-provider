# Build the manager binary
FROM registry.access.redhat.com/ubi9/go-toolset:1.23 AS builder
ARG TARGETOS
ARG TARGETARCH

WORKDIR /opt/app-root/src

# Copy the Go Modules manifests
COPY go.mod go.mod
COPY go.sum go.sum
COPY vendor vendor

# Copy the go source
COPY controlplane/main.go controlplane/main.go
COPY bootstrap/api/ bootstrap/api/
COPY controlplane/api/ controlplane/api/
COPY util util
COPY pkg pkg
COPY assistedinstaller assistedinstaller
COPY controlplane/internal/ controlplane/internal/

# Build
# the GOARCH has not a default value to allow the binary be built according to the host where the command
# was called. For example, if we call make docker-build in a local env which has the Apple Silicon M1 SO
# the docker BUILDPLATFORM arg will be linux/arm64 when for Apple x86 it will be linux/amd64. Therefore,
# by leaving it empty we can ensure that the container and binary shipped on it will have the same platform.
RUN CGO_ENABLED=0 GOOS=${TARGETOS:-linux} GOARCH=${TARGETARCH:-amd64} go build -mod=vendor -a -o manager controlplane/main.go

FROM registry.access.redhat.com/ubi9/ubi-minimal:latest
WORKDIR /
COPY --from=builder /opt/app-root/src/manager .
USER 65532:65532

ENTRYPOINT ["/manager"]
